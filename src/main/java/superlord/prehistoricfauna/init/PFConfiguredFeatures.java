package superlord.prehistoricfauna.init;

import java.util.List;
import java.util.function.Supplier;

import com.google.common.collect.ImmutableList;

import net.minecraft.core.Registry;
import net.minecraft.data.worldgen.features.FeatureUtils;
import net.minecraft.data.worldgen.placement.PlacementUtils;
import net.minecraft.util.random.SimpleWeightedRandomList;
import net.minecraft.util.valueproviders.UniformInt;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraft.world.level.levelgen.feature.ConfiguredFeature;
import net.minecraft.world.level.levelgen.feature.Feature;
import net.minecraft.world.level.levelgen.feature.WeightedPlacedFeature;
import net.minecraft.world.level.levelgen.feature.configurations.BlockStateConfiguration;
import net.minecraft.world.level.levelgen.feature.configurations.DiskConfiguration;
import net.minecraft.world.level.levelgen.feature.configurations.FeatureConfiguration;
import net.minecraft.world.level.levelgen.feature.configurations.NoneFeatureConfiguration;
import net.minecraft.world.level.levelgen.feature.configurations.RandomFeatureConfiguration;
import net.minecraft.world.level.levelgen.feature.configurations.RandomPatchConfiguration;
import net.minecraft.world.level.levelgen.feature.configurations.SimpleBlockConfiguration;
import net.minecraft.world.level.levelgen.feature.stateproviders.BlockStateProvider;
import net.minecraft.world.level.levelgen.feature.stateproviders.WeightedStateProvider;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.RegistryObject;
import superlord.prehistoricfauna.PrehistoricFauna;
import superlord.prehistoricfauna.common.feature.trees.util.JohnstoniaConfig;
import superlord.prehistoricfauna.common.util.CrassostreaOystersConfig;
import superlord.prehistoricfauna.common.util.NoisySphereConfig;
import superlord.prehistoricfauna.common.util.trees.PFTreeConfig;

@SuppressWarnings({ "unchecked", "rawtypes" })
public class PFConfiguredFeatures {

	public static final DeferredRegister<ConfiguredFeature<?,?>> REGISTER = DeferredRegister.create(Registry.CONFIGURED_FEATURE_REGISTRY, PrehistoricFauna.MOD_ID);

	public static final RegistryObject<ConfiguredFeature<?, ?>> SMALL_ARAUCARIA_TREE_1 = REGISTER.register("configured_small_araucaria_tree_1", () -> new ConfiguredFeature<>(PFFeatures.SMALL_ARAUCARIA_TREE_1.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.ARAUCARIA_LOG.get()).setLeavesBlock(PFBlocks.ARAUCARIA_LEAVES.get()).setMinHeight(13).setMaxHeight(18).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> SMALL_ARAUCARIA_TREE_2 = REGISTER.register("configured_small_araucaria_tree_2", () -> new ConfiguredFeature<>(PFFeatures.SMALL_ARAUCARIA_TREE_2.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.ARAUCARIA_LOG.get()).setLeavesBlock(PFBlocks.ARAUCARIA_LEAVES.get()).setMinHeight(6).setMaxHeight(11).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> SMALL_ARAUCARIA_TREE_3 = REGISTER.register("configured_small_araucaria_tree_3", () -> new ConfiguredFeature<>(PFFeatures.SMALL_ARAUCARIA_TREE_3.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.ARAUCARIA_LOG.get()).setLeavesBlock(PFBlocks.ARAUCARIA_LEAVES.get()).setMinHeight(10).setMaxHeight(15).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> SMALL_ARAUCARIA_TREE_4 = REGISTER.register("configured_small_araucaria_tree_4", () -> new ConfiguredFeature<>(PFFeatures.SMALL_ARAUCARIA_TREE_4.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.ARAUCARIA_LOG.get()).setLeavesBlock(PFBlocks.ARAUCARIA_LEAVES.get()).setMinHeight(14).setMaxHeight(19).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> ARAUCARIA_TREE_1 = REGISTER.register("configured_araucaria_tree_1", () -> new ConfiguredFeature<>(PFFeatures.ARAUCARIA_TREE_1.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.ARAUCARIA_LOG.get()).setLeavesBlock(PFBlocks.ARAUCARIA_LEAVES.get()).setMinHeight(44).setMaxHeight(55).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> ARAUCARIA_TREE_2 = REGISTER.register("configured_araucaria_tree_2", () -> new ConfiguredFeature<>(PFFeatures.ARAUCARIA_TREE_2.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.ARAUCARIA_LOG.get()).setLeavesBlock(PFBlocks.ARAUCARIA_LEAVES.get()).setMinHeight(44).setMaxHeight(55).build()));

	public static final RegistryObject<ConfiguredFeature<?, ?>> SMALL_AGATHOXYLON_TREE_1 = REGISTER.register("configured_small_agathoxylon_tree_1", () -> new ConfiguredFeature<>(PFFeatures.SMALL_AGATHOXYLON_TREE_1.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.AGATHOXYLON_LOG.get()).setLeavesBlock(PFBlocks.AGATHOXYLON_LEAVES.get()).setMaxHeight(20).setMinHeight(20).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> SMALL_AGATHOXYLON_TREE_2 = REGISTER.register("configured_small_agathoxylon_tree_2", () -> new ConfiguredFeature<>(PFFeatures.SMALL_AGATHOXYLON_TREE_2.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.AGATHOXYLON_LOG.get()).setLeavesBlock(PFBlocks.AGATHOXYLON_LEAVES.get()).setMaxHeight(25).setMinHeight(25).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> MEDIUM_AGATHOXYLON_TREE_1 = REGISTER.register("configured_medium_agathoxylon_tree_1", () -> new ConfiguredFeature<>(PFFeatures.MIDDLE_AGATHOXYLON_TREE_1.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.AGATHOXYLON_LOG.get()).setLeavesBlock(PFBlocks.AGATHOXYLON_LEAVES.get()).setMaxHeight(33).setMinHeight(33).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> MEDIUM_AGATHOXYLON_TREE_2 = REGISTER.register("configured_medium_agathoxylon_tree_2", () -> new ConfiguredFeature<>(PFFeatures.MIDDLE_AGATHOXYLON_TREE_2.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.AGATHOXYLON_LOG.get()).setLeavesBlock(PFBlocks.AGATHOXYLON_LEAVES.get()).setMaxHeight(41).setMinHeight(41).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> LARGE_AGATHOXYLON_TREE_1 = REGISTER.register("configured_large_agathoxylon_tree_1", () -> new ConfiguredFeature<>(PFFeatures.BIG_AGATHOXYLON_TREE_1.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.AGATHOXYLON_LOG.get()).setLeavesBlock(PFBlocks.AGATHOXYLON_LEAVES.get()).setMaxHeight(44).setMinHeight(44).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> LARGE_AGATHOXYLON_TREE_2 = REGISTER.register("configured_large_agathoxylon_tree_2", () -> new ConfiguredFeature<>(PFFeatures.BIG_AGATHOXYLON_TREE_2.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.AGATHOXYLON_LOG.get()).setLeavesBlock(PFBlocks.AGATHOXYLON_LEAVES.get()).setMaxHeight(55).setMinHeight(55).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> LARGE_AGATHOXYLON_TREE_3 = REGISTER.register("configured_large_agathoxylon_tree_3", () -> new ConfiguredFeature<>(PFFeatures.BIG_AGATHOXYLON_TREE_3.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.AGATHOXYLON_LOG.get()).setLeavesBlock(PFBlocks.AGATHOXYLON_LEAVES.get()).setMaxHeight(60).setMinHeight(60).build()));

	public static final RegistryObject<ConfiguredFeature<?, ?>> BRACHYPHYLLUM_TREE_1 = REGISTER.register("configured_brachyphyllum_tree_1", () -> new ConfiguredFeature<>(PFFeatures.BRACHYPHYLLUM_TREE_1.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.BRACHYPHYLLUM_LOG.get()).setLeavesBlock(PFBlocks.BRACHYPHYLLUM_LEAVES.get()).setMinHeight(4).setMaxHeight(6).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> BRACHYPHYLLUM_TREE_2 = REGISTER.register("configured_brachyphyllum_tree_2", () -> new ConfiguredFeature<>(PFFeatures.BRACHYPHYLLUM_TREE_2.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.BRACHYPHYLLUM_LOG.get()).setLeavesBlock(PFBlocks.BRACHYPHYLLUM_LEAVES.get()).setMinHeight(9).setMaxHeight(11).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> BRACHYPHYLLUM_TREE_3 = REGISTER.register("configured_brachyphyllum_tree_3", () -> new ConfiguredFeature<>(PFFeatures.BRACHYPHYLLUM_TREE_3.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.BRACHYPHYLLUM_LOG.get()).setLeavesBlock(PFBlocks.BRACHYPHYLLUM_LEAVES.get()).setMinHeight(22).setMaxHeight(24).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> BRACHYPHYLLUM_TREE_4 = REGISTER.register("configured_brachyphyllum_tree_4", () -> new ConfiguredFeature<>(PFFeatures.BRACHYPHYLLUM_TREE_4.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.BRACHYPHYLLUM_LOG.get()).setLeavesBlock(PFBlocks.BRACHYPHYLLUM_LEAVES.get()).setMinHeight(20).setMaxHeight(22).build()));

	public static final RegistryObject<ConfiguredFeature<?, ?>> GINKGO_TREE_1 = REGISTER.register("configured_ginkgo_tree_1", () -> new ConfiguredFeature<>(PFFeatures.GINKGO_TREE_1.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.GINKGO_LOG.get()).setLeavesBlock(PFBlocks.GINKGO_LEAVES.get()).setMinHeight(16).setMaxHeight(19).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> GINKGO_TREE_2 = REGISTER.register("configured_ginkgo_tree_2", () -> new ConfiguredFeature<>(PFFeatures.GINKGO_TREE_2.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.GINKGO_LOG.get()).setLeavesBlock(PFBlocks.GINKGO_LEAVES.get()).setMinHeight(9).setMaxHeight(12).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> GINKGO_TREE_3 = REGISTER.register("configured_ginkgo_tree_3", () -> new ConfiguredFeature<>(PFFeatures.GINKGO_TREE_3.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.GINKGO_LOG.get()).setLeavesBlock(PFBlocks.GINKGO_LEAVES.get()).setMinHeight(11).setMaxHeight(14).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> GINKGO_TREE_4 = REGISTER.register("configured_ginkgo_tree_4", () -> new ConfiguredFeature<>(PFFeatures.GINKGO_TREE_4.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.GINKGO_LOG.get()).setLeavesBlock(PFBlocks.GINKGO_LEAVES.get()).setMinHeight(9).setMaxHeight(13).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> BIG_GINKGO_TREE_1 = REGISTER.register("configured_big_ginkgo_tree_1", () -> new ConfiguredFeature<>(PFFeatures.BIG_GINKGO_TREE_1.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.GINKGO_LOG.get()).setLeavesBlock(PFBlocks.GINKGO_LEAVES.get()).setMinHeight(18).setMaxHeight(18).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> BIG_GINKGO_TREE_2 = REGISTER.register("configured_big_ginkgo_tree_2", () -> new ConfiguredFeature<>(PFFeatures.BIG_GINKGO_TREE_2.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.GINKGO_LOG.get()).setLeavesBlock(PFBlocks.GINKGO_LEAVES.get()).setMinHeight(20).setMaxHeight(20).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> BIG_GINKGO_TREE_3 = REGISTER.register("configured_big_ginkgo_tree_3", () -> new ConfiguredFeature<>(PFFeatures.BIG_GINKGO_TREE_3.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.GINKGO_LOG.get()).setLeavesBlock(PFBlocks.GINKGO_LEAVES.get()).setMinHeight(26).setMaxHeight(26).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> BIG_GINKGO_TREE_4 = REGISTER.register("configured_big_ginkgo_tree_4", () -> new ConfiguredFeature<>(PFFeatures.BIG_GINKGO_TREE_4.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.GINKGO_LOG.get()).setLeavesBlock(PFBlocks.GINKGO_LEAVES.get()).setMinHeight(29).setMaxHeight(29).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> YELLOW_GINKGO_TREE_1 = REGISTER.register("configured_yellow_ginkgo_tree_1", () -> new ConfiguredFeature<>(PFFeatures.GINKGO_TREE_1.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.GINKGO_LOG.get()).setLeavesBlock(PFBlocks.YELLOW_GINKGO_LEAVES.get()).setMinHeight(16).setMaxHeight(19).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> YELLOW_GINKGO_TREE_2 = REGISTER.register("configured_yellow_ginkgo_tree_2", () -> new ConfiguredFeature<>(PFFeatures.GINKGO_TREE_2.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.GINKGO_LOG.get()).setLeavesBlock(PFBlocks.YELLOW_GINKGO_LEAVES.get()).setMinHeight(9).setMaxHeight(12).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> YELLOW_GINKGO_TREE_3 = REGISTER.register("configured_yellow_ginkgo_tree_3", () -> new ConfiguredFeature<>(PFFeatures.GINKGO_TREE_3.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.GINKGO_LOG.get()).setLeavesBlock(PFBlocks.YELLOW_GINKGO_LEAVES.get()).setMinHeight(11).setMaxHeight(14).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> YELLOW_GINKGO_TREE_4 = REGISTER.register("configured__yellowginkgo_tree_4", () -> new ConfiguredFeature<>(PFFeatures.GINKGO_TREE_4.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.GINKGO_LOG.get()).setLeavesBlock(PFBlocks.YELLOW_GINKGO_LEAVES.get()).setMinHeight(9).setMaxHeight(13).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> YELLOW_BIG_GINKGO_TREE_1 = REGISTER.register("configured_yellow_big_ginkgo_tree_1", () -> new ConfiguredFeature<>(PFFeatures.BIG_GINKGO_TREE_1.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.GINKGO_LOG.get()).setLeavesBlock(PFBlocks.YELLOW_GINKGO_LEAVES.get()).setMinHeight(18).setMaxHeight(18).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> YELLOW_BIG_GINKGO_TREE_2 = REGISTER.register("configured_yellow_big_ginkgo_tree_2", () -> new ConfiguredFeature<>(PFFeatures.BIG_GINKGO_TREE_2.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.GINKGO_LOG.get()).setLeavesBlock(PFBlocks.YELLOW_GINKGO_LEAVES.get()).setMinHeight(20).setMaxHeight(20).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> YELLOW_BIG_GINKGO_TREE_3 = REGISTER.register("configured_yellow_big_ginkgo_tree_3", () -> new ConfiguredFeature<>(PFFeatures.BIG_GINKGO_TREE_3.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.GINKGO_LOG.get()).setLeavesBlock(PFBlocks.YELLOW_GINKGO_LEAVES.get()).setMinHeight(26).setMaxHeight(26).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> YELLOW_BIG_GINKGO_TREE_4 = REGISTER.register("configured_yellow_big_ginkgo_tree_4", () -> new ConfiguredFeature<>(PFFeatures.BIG_GINKGO_TREE_4.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.GINKGO_LOG.get()).setLeavesBlock(PFBlocks.YELLOW_GINKGO_LEAVES.get()).setMinHeight(29).setMaxHeight(29).build()));

	public static final RegistryObject<ConfiguredFeature<?, ?>> HEIDIPHYLLUM_TREE_1 = REGISTER.register("configured_heidiphyllum_tree_1", () -> new ConfiguredFeature<>(PFFeatures.HEIDIPHYLLUM_TREE_1.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.HEIDIPHYLLUM_LOG.get()).setLeavesBlock(PFBlocks.HEIDIPHYLLUM_LEAVES.get()).setMinHeight(9).setMaxHeight(12).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> HEIDIPHYLLUM_TREE_2 = REGISTER.register("configured_heidiphyllum_tree_2", () -> new ConfiguredFeature<>(PFFeatures.HEIDIPHYLLUM_TREE_2.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.HEIDIPHYLLUM_LOG.get()).setLeavesBlock(PFBlocks.HEIDIPHYLLUM_LEAVES.get()).setMinHeight(12).setMaxHeight(15).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> HEIDIPHYLLUM_TREE_3 = REGISTER.register("configured_heidiphyllum_tree_3", () -> new ConfiguredFeature<>(PFFeatures.HEIDIPHYLLUM_TREE_3.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.HEIDIPHYLLUM_LOG.get()).setLeavesBlock(PFBlocks.HEIDIPHYLLUM_LEAVES.get()).setMinHeight(12).setMaxHeight(15).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> HEIDIPHYLLUM_TREE_4 = REGISTER.register("configured_heidiphyllum_tree_4", () -> new ConfiguredFeature<>(PFFeatures.HEIDIPHYLLUM_TREE_4.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.HEIDIPHYLLUM_LOG.get()).setLeavesBlock(PFBlocks.HEIDIPHYLLUM_LEAVES.get()).setMinHeight(15).setMaxHeight(18).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> HEIDIPHYLLUM_TREE_5 = REGISTER.register("configured_heidiphyllum_tree_5", () -> new ConfiguredFeature<>(PFFeatures.HEIDIPHYLLUM_TREE_5.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.HEIDIPHYLLUM_LOG.get()).setLeavesBlock(PFBlocks.HEIDIPHYLLUM_LEAVES.get()).setMinHeight(7).setMaxHeight(10).build()));

	public static final RegistryObject<ConfiguredFeature<?, ?>> LIRIODENDRITES_TREE_1 = REGISTER.register("configured_liriodendrites_tree_1", () -> new ConfiguredFeature<>(PFFeatures.LIRIODENDRITES_TREE_1.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.LIRIODENDRITES_LOG.get()).setLeavesBlock(PFBlocks.LIRIODENDRITES_LEAVES.get()).setMinHeight(16).setMaxHeight(20).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> LIRIODENDRITES_TREE_2 = REGISTER.register("configured_liriodendrites_tree_2", () -> new ConfiguredFeature<>(PFFeatures.LIRIODENDRITES_TREE_2.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.LIRIODENDRITES_LOG.get()).setLeavesBlock(PFBlocks.LIRIODENDRITES_LEAVES.get()).setMinHeight(7).setMaxHeight(10).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> LIRIODENDRITES_TREE_3 = REGISTER.register("configured_liriodendrites_tree_3", () -> new ConfiguredFeature<>(PFFeatures.LIRIODENDRITES_TREE_3.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.LIRIODENDRITES_LOG.get()).setLeavesBlock(PFBlocks.LIRIODENDRITES_LEAVES.get()).setMinHeight(12).setMaxHeight(15).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> LIRIODENDRITES_TREE_4 = REGISTER.register("configured_liriodendrites_tree_4", () -> new ConfiguredFeature<>(PFFeatures.LIRIODENDRITES_TREE_4.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.LIRIODENDRITES_LOG.get()).setLeavesBlock(PFBlocks.LIRIODENDRITES_LEAVES.get()).setMinHeight(21).setMaxHeight(24).build()));

	public static final RegistryObject<ConfiguredFeature<?, ?>> LARGE_METASEQUOIA_TREE_1 = REGISTER.register("configured_large_metasequoia_tree_1", () -> new ConfiguredFeature<>(PFFeatures.LARGE_METASEQUOIA_TREE_1.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.METASEQUOIA_LOG.get()).setLeavesBlock(PFBlocks.METASEQUOIA_LEAVES.get()).setMinHeight(41).setMaxHeight(53).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> LARGE_METASEQUOIA_TREE_2 = REGISTER.register("configured_large_metasequoia_tree_2", () -> new ConfiguredFeature<>(PFFeatures.LARGE_METASEQUOIA_TREE_2.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.METASEQUOIA_LOG.get()).setLeavesBlock(PFBlocks.METASEQUOIA_LEAVES.get()).setMinHeight(44).setMaxHeight(56).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> SMALL_METASEQUOIA_TREE_1 = REGISTER.register("configured_small_metasequoia_tree_1", () -> new ConfiguredFeature<>(PFFeatures.METASEQUOIA_TREE_1.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.METASEQUOIA_LOG.get()).setLeavesBlock(PFBlocks.METASEQUOIA_LEAVES.get()).setMinHeight(10).setMaxHeight(16).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> SMALL_METASEQUOIA_TREE_2 = REGISTER.register("configured_small_metasequoia_tree_2", () -> new ConfiguredFeature<>(PFFeatures.METASEQUOIA_TREE_2.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.METASEQUOIA_LOG.get()).setLeavesBlock(PFBlocks.METASEQUOIA_LEAVES.get()).setMinHeight(15).setMaxHeight(21).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> SMALL_METASEQUOIA_TREE_3 = REGISTER.register("configured_small_metasequoia_tree_3", () -> new ConfiguredFeature<>(PFFeatures.METASEQUOIA_TREE_3.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.METASEQUOIA_LOG.get()).setLeavesBlock(PFBlocks.METASEQUOIA_LEAVES.get()).setMinHeight(19).setMaxHeight(25).build()));

	public static final RegistryObject<ConfiguredFeature<?, ?>> PROTOPICEOXYLON_TREE_1 = REGISTER.register("configured_protopiceoxylon_tree_1", () -> new ConfiguredFeature<>(PFFeatures.PROTOPICEOXYLON_TREE_1.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.PROTOPICEOXYLON_LOG.get()).setLeavesBlock(PFBlocks.PROTOPICEOXYLON_LEAVES.get()).setMinHeight(11).setMaxHeight(15).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> PROTOPICEOXYLON_TREE_2 = REGISTER.register("configured_protopiceoxylon_tree_2", () -> new ConfiguredFeature<>(PFFeatures.PROTOPICEOXYLON_TREE_2.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.PROTOPICEOXYLON_LOG.get()).setLeavesBlock(PFBlocks.PROTOPICEOXYLON_LEAVES.get()).setMinHeight(9).setMaxHeight(13).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> PROTOPICEOXYLON_TREE_3 = REGISTER.register("configured_protopiceoxylon_tree_3", () -> new ConfiguredFeature<>(PFFeatures.PROTOPICEOXYLON_TREE_3.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.PROTOPICEOXYLON_LOG.get()).setLeavesBlock(PFBlocks.PROTOPICEOXYLON_LEAVES.get()).setMinHeight(13).setMaxHeight(17).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> PROTOPICEOXYLON_TREE_4 = REGISTER.register("configured_protopiceoxylon_tree_4", () -> new ConfiguredFeature<>(PFFeatures.PROTOPICEOXYLON_TREE_4.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.PROTOPICEOXYLON_LOG.get()).setLeavesBlock(PFBlocks.PROTOPICEOXYLON_LEAVES.get()).setMinHeight(16).setMaxHeight(20).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> PROTOPICEOXYLON_TREE_5 = REGISTER.register("configured_protopiceoxylon_tree_5", () -> new ConfiguredFeature<>(PFFeatures.PROTOPICEOXYLON_TREE_5.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.PROTOPICEOXYLON_LOG.get()).setLeavesBlock(PFBlocks.PROTOPICEOXYLON_LEAVES.get()).setMinHeight(7).setMaxHeight(11).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> PROTOPICEOXYLON_TREE_6 = REGISTER.register("configured_protopiceoxylon_tree_6", () -> new ConfiguredFeature<>(PFFeatures.PROTOPICEOXYLON_TREE_6.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.PROTOPICEOXYLON_LOG.get()).setLeavesBlock(PFBlocks.PROTOPICEOXYLON_LEAVES.get()).setMinHeight(14).setMaxHeight(18).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> PROTOPICEOXYLON_TREE_7 = REGISTER.register("configured_protopiceoxylon_tree_7", () -> new ConfiguredFeature<>(PFFeatures.PROTOPICEOXYLON_TREE_7.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.PROTOPICEOXYLON_LOG.get()).setLeavesBlock(PFBlocks.PROTOPICEOXYLON_LEAVES.get()).setMinHeight(14).setMaxHeight(19).build()));

	public static final RegistryObject<ConfiguredFeature<?, ?>> SCHILDERIA_TREE_1 = REGISTER.register("configured_schilderia_tree_1", () -> new ConfiguredFeature<>(PFFeatures.SCHILDERIA_TREE_1.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.SCHILDERIA_LOG.get()).setLeavesBlock(PFBlocks.SCHILDERIA_LEAVES.get()).setMinHeight(13).setMaxHeight(13).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> SCHILDERIA_TREE_2 = REGISTER.register("configured_schilderia_tree_2", () -> new ConfiguredFeature<>(PFFeatures.SCHILDERIA_TREE_2.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.SCHILDERIA_LOG.get()).setLeavesBlock(PFBlocks.SCHILDERIA_LEAVES.get()).setMinHeight(17).setMaxHeight(17).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> SCHILDERIA_TREE_3 = REGISTER.register("configured_schilderia_tree_3", () -> new ConfiguredFeature<>(PFFeatures.SCHILDERIA_TREE_3.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.SCHILDERIA_LOG.get()).setLeavesBlock(PFBlocks.SCHILDERIA_LEAVES.get()).setMinHeight(25).setMaxHeight(25).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> SCHILDERIA_TREE_4 = REGISTER.register("configured_schilderia_tree_4", () -> new ConfiguredFeature<>(PFFeatures.SCHILDERIA_TREE_4.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.SCHILDERIA_LOG.get()).setLeavesBlock(PFBlocks.SCHILDERIA_LEAVES.get()).setMinHeight(35).setMaxHeight(35).build()));

	public static final RegistryObject<ConfiguredFeature<?, ?>> TROCHODENDROIDES_TREE_1 = REGISTER.register("configured_trochodendroides_tree_1", () -> new ConfiguredFeature<>(PFFeatures.TROCHODENDROIDES_TREE_1.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.TROCHODENDROIDES_LOG.get()).setLeavesBlock(PFBlocks.TROCHODENDROIDES_LEAVES.get()).setMinHeight(4).setMaxHeight(4).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> TROCHODENDROIDES_TREE_2 = REGISTER.register("configured_trochodendroides_tree_2", () -> new ConfiguredFeature<>(PFFeatures.TROCHODENDROIDES_TREE_2.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.TROCHODENDROIDES_LOG.get()).setLeavesBlock(PFBlocks.TROCHODENDROIDES_LEAVES.get()).setMinHeight(5).setMaxHeight(5).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> TROCHODENDROIDES_TREE_3 = REGISTER.register("configured_trochodendroides_tree_3", () -> new ConfiguredFeature<>(PFFeatures.TROCHODENDROIDES_TREE_3.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.TROCHODENDROIDES_LOG.get()).setLeavesBlock(PFBlocks.TROCHODENDROIDES_LEAVES.get()).setMinHeight(6).setMaxHeight(6).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> TROCHODENDROIDES_TREE_4 = REGISTER.register("configured_trochodendroides_tree_4", () -> new ConfiguredFeature<>(PFFeatures.TROCHODENDROIDES_TREE_4.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.TROCHODENDROIDES_LOG.get()).setLeavesBlock(PFBlocks.TROCHODENDROIDES_LEAVES.get()).setMinHeight(4).setMaxHeight(4).build()));

	public static final RegistryObject<ConfiguredFeature<?, ?>> WOODWORTHIA_TREE_1 = REGISTER.register("configured_woodworthia_tree_1", () -> new ConfiguredFeature<>(PFFeatures.WOODWORTHIA_TREE_1.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.WOODWORTHIA_LOG.get()).setLeavesBlock(PFBlocks.WOODWORTHIA_LEAVES.get()).setMinHeight(16).setMaxHeight(20).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> WOODWORTHIA_TREE_2 = REGISTER.register("configured_woodworthia_tree_2", () -> new ConfiguredFeature<>(PFFeatures.WOODWORTHIA_TREE_2.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.WOODWORTHIA_LOG.get()).setLeavesBlock(PFBlocks.WOODWORTHIA_LEAVES.get()).setMinHeight(20).setMaxHeight(24).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> WOODWORTHIA_TREE_3 = REGISTER.register("configured_woodworthia_tree_3", () -> new ConfiguredFeature<>(PFFeatures.WOODWORTHIA_TREE_3.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.WOODWORTHIA_LOG.get()).setLeavesBlock(PFBlocks.WOODWORTHIA_LEAVES.get()).setMinHeight(24).setMaxHeight(28).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> WOODWORTHIA_TREE_4 = REGISTER.register("configured_woodworthia_tree_4", () -> new ConfiguredFeature<>(PFFeatures.WOODWORTHIA_TREE_4.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.WOODWORTHIA_LOG.get()).setLeavesBlock(PFBlocks.WOODWORTHIA_LEAVES.get()).setMinHeight(28).setMaxHeight(32).build()));

	public static final RegistryObject<ConfiguredFeature<?, ?>> LARGE_PROTOJUNIPEROXYLON_TREE_1 = REGISTER.register("configured_large_protojuniperoxylon_tree_1", () -> new ConfiguredFeature<>(PFFeatures.LARGE_METASEQUOIA_TREE_1.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.PROTOJUNIPEROXYLON_LOG.get()).setLeavesBlock(PFBlocks.PROTOJUNIPEROXYLON_LEAVES.get()).setMinHeight(41).setMaxHeight(53).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> LARGE_PROTOJUNIPEROXYLON_TREE_2 = REGISTER.register("configured_large_protojuniperoxylon_tree_2", () -> new ConfiguredFeature<>(PFFeatures.LARGE_METASEQUOIA_TREE_2.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.PROTOJUNIPEROXYLON_LOG.get()).setLeavesBlock(PFBlocks.PROTOJUNIPEROXYLON_LEAVES.get()).setMinHeight(44).setMaxHeight(56).build()));

	public static final RegistryObject<ConfiguredFeature<?, ?>> DRYOPHYLLUM_TREE_1 = REGISTER.register("configured_dryophyllum_tree_1", () -> new ConfiguredFeature<>(PFFeatures.DRYOPHYLLUM_TREE_1.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.DRYOPHYLLUM_LOG.get()).setLeavesBlock(PFBlocks.DRYOPHYLLUM_LEAVES.get()).setMinHeight(3).setMaxHeight(12).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> DRYOPHYLLUM_TREE_2 = REGISTER.register("configured_dryophyllum_tree_2", () -> new ConfiguredFeature<>(PFFeatures.DRYOPHYLLUM_TREE_2.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.DRYOPHYLLUM_LOG.get()).setLeavesBlock(PFBlocks.DRYOPHYLLUM_LEAVES.get()).setMinHeight(5).setMaxHeight(16).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> DRYOPHYLLUM_TREE_3 = REGISTER.register("configured_dryophyllum_tree_3", () -> new ConfiguredFeature<>(PFFeatures.DRYOPHYLLUM_TREE_3.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.DRYOPHYLLUM_LOG.get()).setLeavesBlock(PFBlocks.DRYOPHYLLUM_LEAVES.get()).setMinHeight(13).setMaxHeight(20).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> DRYOPHYLLUM_TREE_4 = REGISTER.register("configured_dryophyllum_tree_4", () -> new ConfiguredFeature<>(PFFeatures.DRYOPHYLLUM_TREE_4.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.DRYOPHYLLUM_LOG.get()).setLeavesBlock(PFBlocks.DRYOPHYLLUM_LEAVES.get()).setMinHeight(15).setMaxHeight(22).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> DRYOPHYLLUM_TREE_5 = REGISTER.register("configured_dryophyllum_tree_5", () -> new ConfiguredFeature<>(PFFeatures.DRYOPHYLLUM_TREE_5.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.DRYOPHYLLUM_LOG.get()).setLeavesBlock(PFBlocks.DRYOPHYLLUM_LEAVES.get()).setMinHeight(17).setMaxHeight(26).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> DRYOPHYLLUM_TREE_6 = REGISTER.register("configured_dryophyllum_tree_6", () -> new ConfiguredFeature<>(PFFeatures.DRYOPHYLLUM_TREE_6.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.DRYOPHYLLUM_LOG.get()).setLeavesBlock(PFBlocks.DRYOPHYLLUM_LEAVES.get()).setMinHeight(12).setMaxHeight(26).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> DRYOPHYLLUM_TREE_7 = REGISTER.register("configured_dryophyllum_tree_7", () -> new ConfiguredFeature<>(PFFeatures.DRYOPHYLLUM_TREE_7.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.DRYOPHYLLUM_LOG.get()).setLeavesBlock(PFBlocks.DRYOPHYLLUM_LEAVES.get()).setMinHeight(18).setMaxHeight(22).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> DRYOPHYLLUM_TREE_8 = REGISTER.register("configured_dryophyllum_tree_8", () -> new ConfiguredFeature<>(PFFeatures.DRYOPHYLLUM_TREE_8.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.DRYOPHYLLUM_LOG.get()).setLeavesBlock(PFBlocks.DRYOPHYLLUM_LEAVES.get()).setMinHeight(20).setMaxHeight(23).build()));

	public static final RegistryObject<ConfiguredFeature<?, ?>> TAXODIUM_TREE_1 = REGISTER.register("configured_taxodium_tree_1", () -> new ConfiguredFeature<>(PFFeatures.TAXODIUM_TREE_1.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.TAXODIUM_LOG.get()).setLeavesBlock(PFBlocks.TAXODIUM_LEAVES.get()).setMinHeight(17).setMaxHeight(25).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> TAXODIUM_TREE_2 = REGISTER.register("configured_taxodium_tree_2", () -> new ConfiguredFeature<>(PFFeatures.TAXODIUM_TREE_2.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.TAXODIUM_LOG.get()).setLeavesBlock(PFBlocks.TAXODIUM_LEAVES.get()).setMinHeight(19).setMaxHeight(27).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> TAXODIUM_TREE_3 = REGISTER.register("configured_taxodium_tree_3", () -> new ConfiguredFeature<>(PFFeatures.TAXODIUM_TREE_3.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.TAXODIUM_LOG.get()).setLeavesBlock(PFBlocks.TAXODIUM_LEAVES.get()).setMinHeight(21).setMaxHeight(29).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> TAXODIUM_TREE_4 = REGISTER.register("configured_taxodium_tree_4", () -> new ConfiguredFeature<>(PFFeatures.TAXODIUM_TREE_4.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.TAXODIUM_LOG.get()).setLeavesBlock(PFBlocks.TAXODIUM_LEAVES.get()).setMinHeight(24).setMaxHeight(32).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> TAXODIUM_TREE_5 = REGISTER.register("configured_taxodium_tree_5", () -> new ConfiguredFeature<>(PFFeatures.TAXODIUM_TREE_5.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.TAXODIUM_LOG.get()).setLeavesBlock(PFBlocks.TAXODIUM_LEAVES.get()).setMinHeight(29).setMaxHeight(37).build()));
	public static final RegistryObject<ConfiguredFeature<?, ?>> TAXODIUM_TREE_6 = REGISTER.register("configured_taxodium_tree_6", () -> new ConfiguredFeature<>(PFFeatures.TAXODIUM_TREE_6.get(), new PFTreeConfig.Builder().setTrunkBlock(PFBlocks.TAXODIUM_LOG.get()).setLeavesBlock(PFBlocks.TAXODIUM_LEAVES.get()).setMinHeight(38).setMaxHeight(38).build()));

	public static final RegistryObject<ConfiguredFeature<?, ?>> ZAMITES_BUSH = REGISTER.register("configured_zamites_bush", () -> new ConfiguredFeature<>(PFFeatures.ZAMITES_BUSH.get(), new JohnstoniaConfig(1)));
	public static final RegistryObject<ConfiguredFeature<?, ?>> COMMON_ZAMITES_BUSH = REGISTER.register("configured_common_zamites_bush", () -> new ConfiguredFeature<>(PFFeatures.ZAMITES_BUSH.get(), new JohnstoniaConfig(30)));

	public static final RegistryObject<ConfiguredFeature<NoisySphereConfig, ?>> FOSSILIZED_CHALK = REGISTER.register("configured_fossilized_chalk", () -> new ConfiguredFeature<>(PFFeatures.NOISY_SPHERE.get(), new NoisySphereConfig.Builder().setBlock(new WeightedStateProvider(SimpleWeightedRandomList.<BlockState>builder().add(PFBlocks.CHALK.get().defaultBlockState(), 20).add(PFBlocks.CHALK_FOSSIL.get().defaultBlockState(), 5))).setMinRadius(10).setMinYRadius(3).setMaxYRadius(8).build()));
	public static final RegistryObject<ConfiguredFeature<NoisySphereConfig, ?>> FOSSILIZED_SILTSTONE = REGISTER.register("configured_fossilized_siltstone", () -> new ConfiguredFeature<>(PFFeatures.NOISY_SPHERE.get(), new NoisySphereConfig.Builder().setBlock(new WeightedStateProvider(SimpleWeightedRandomList.<BlockState>builder().add(PFBlocks.SILTSTONE.get().defaultBlockState(), 20).add(PFBlocks.SILTSTONE_FOSSIL.get().defaultBlockState(), 5))).setMinRadius(10).setMinYRadius(3).setMaxYRadius(8).build()));
	public static final RegistryObject<ConfiguredFeature<NoisySphereConfig, ?>> FOSSILIZED_SANDSTONE = REGISTER.register("configured_fossilized_sandstone", () -> new ConfiguredFeature<>(PFFeatures.NOISY_SPHERE.get(), new NoisySphereConfig.Builder().setBlock(new WeightedStateProvider(SimpleWeightedRandomList.<BlockState>builder().add(PFBlocks.SANDSTONE.get().defaultBlockState(), 20).add(PFBlocks.SANDSTONE_FOSSIL.get().defaultBlockState(), 5))).setMinRadius(10).setMinYRadius(3).setMaxYRadius(8).build()));

	public static final RegistryObject<ConfiguredFeature<?, ?>> MARCHANITA = REGISTER.register("configured_marchantia", () -> new ConfiguredFeature(Feature.RANDOM_PATCH, grassPatch(BlockStateProvider.simple(PFBlocks.MARCHANTIA.get()), 32)));
	public static final RegistryObject<ConfiguredFeature<?, ?>> HORSETAILS = REGISTER.register("configured_horsetails", () -> new ConfiguredFeature(Feature.RANDOM_PATCH, grassPatch(BlockStateProvider.simple(PFBlocks.HORSETAIL.get()), 32)));
	public static final RegistryObject<ConfiguredFeature<?, ?>> WATERLOGGED_HORSETAILS = REGISTER.register("configured_waterlogged_horsetails", () -> new ConfiguredFeature(PFFeatures.WATERLOGGED_HORSETAILS.get(), new JohnstoniaConfig(15)));
	public static final RegistryObject<ConfiguredFeature<?, ?>> DOUBLE_HORSETAILS = REGISTER.register("configured_double_horsetails", () -> new ConfiguredFeature(Feature.RANDOM_PATCH,grassPatch(BlockStateProvider.simple(PFBlocks.TALL_HORSETAIL.get()), 32)));
	public static final RegistryObject<ConfiguredFeature<?, ?>> CLUBMOSS = REGISTER.register("configured_clubmoss", () -> new ConfiguredFeature(Feature.RANDOM_PATCH, grassPatch(BlockStateProvider.simple(PFBlocks.CLUBMOSS.get()), 32)));
	public static final RegistryObject<ConfiguredFeature<?, ?>> OSMUNDA = REGISTER.register("configured_osmunda", () -> new ConfiguredFeature(Feature.RANDOM_PATCH, grassPatch(BlockStateProvider.simple(PFBlocks.OSMUNDA.get()), 32)));
	public static final RegistryObject<ConfiguredFeature<?, ?>> DOUBLE_OSMUNDA = REGISTER.register("configured_double_osmunda", () -> new ConfiguredFeature(Feature.RANDOM_PATCH, grassPatch(BlockStateProvider.simple(PFBlocks.TALL_OSMUNDA.get()), 32)));
	public static final RegistryObject<ConfiguredFeature<?, ?>> MOSS = REGISTER.register("configured_moss", () -> new ConfiguredFeature(Feature.RANDOM_PATCH, grassPatch(BlockStateProvider.simple(PFBlocks.MOSS_CARPET.get()), 32)));
	public static final RegistryObject<ConfiguredFeature<?, ?>> OTOZAMITES = REGISTER.register("configured_otozamites", () -> new ConfiguredFeature(Feature.RANDOM_PATCH, grassPatch(BlockStateProvider.simple(PFBlocks.OTOZAMITES.get()), 32)));
	public static final RegistryObject<ConfiguredFeature<?, ?>> DOUBLE_OTOZAMITES = REGISTER.register("configured_double_otozamites", () -> new ConfiguredFeature(Feature.RANDOM_PATCH, grassPatch(BlockStateProvider.simple(PFBlocks.TALL_OTOZAMITES.get()), 32)));
	public static final RegistryObject<ConfiguredFeature<?, ?>> LAUROZAMITES = REGISTER.register("configured_laurozamites", () -> new ConfiguredFeature(Feature.RANDOM_PATCH, grassPatch(BlockStateProvider.simple(PFBlocks.LAUROZAMITES.get()), 32)));
	public static final RegistryObject<ConfiguredFeature<?, ?>> CLATHOPTERIS = REGISTER.register("configured_clathopteris", () -> new ConfiguredFeature(Feature.RANDOM_PATCH, grassPatch(BlockStateProvider.simple(PFBlocks.CLATHOPTERIS.get()), 32)));
	public static final RegistryObject<ConfiguredFeature<?, ?>> CONIOPTERIS = REGISTER.register("configured_coniopteris", () -> new ConfiguredFeature(Feature.RANDOM_PATCH, grassPatch(BlockStateProvider.simple(PFBlocks.CONIOPTERIS.get()), 32)));
	public static final RegistryObject<ConfiguredFeature<?, ?>> OSMUNDACAULIS = REGISTER.register("configured_osmundacaulis", () -> new ConfiguredFeature(Feature.RANDOM_PATCH, grassPatch(BlockStateProvider.simple(PFBlocks.OSMUNDACAULIS.get()), 32)));
	public static final RegistryObject<ConfiguredFeature<?, ?>> DOUBLE_OSMUNDACAULIS = REGISTER.register("configured_double_osmundacaulis", () -> new ConfiguredFeature(Feature.RANDOM_PATCH, grassPatch(BlockStateProvider.simple(PFBlocks.TALL_OSMUNDACAULIS.get()), 32)));
	public static final RegistryObject<ConfiguredFeature<?, ?>> DEAD_OSMUNDACAULIS = REGISTER.register("configured_dead_osmundacaulis", () -> new ConfiguredFeature(Feature.RANDOM_PATCH, grassPatch(BlockStateProvider.simple(PFBlocks.DEAD_OSMUNDACAULIS.get()), 32)));
	public static final RegistryObject<ConfiguredFeature<?, ?>> MICHELILLOA = REGISTER.register("configured_michelilloa", () -> new ConfiguredFeature(Feature.RANDOM_PATCH, grassPatch(BlockStateProvider.simple(PFBlocks.MICHELILLOA.get()), 32)));
	public static final RegistryObject<ConfiguredFeature<?, ?>> CLADOPHLEBIS = REGISTER.register("configured_cladophlebis", () -> new ConfiguredFeature(Feature.RANDOM_PATCH, grassPatch(BlockStateProvider.simple(PFBlocks.CLADOPHLEBIS.get()), 32)));
	public static final RegistryObject<ConfiguredFeature<?, ?>> SCYTOPHYLLUM = REGISTER.register("configured_scytophyllum", () -> new ConfiguredFeature(Feature.RANDOM_PATCH, grassPatch(BlockStateProvider.simple(PFBlocks.SCYTOPHYLLUM.get()), 32)));
	public static final RegistryObject<ConfiguredFeature<?, ?>> PHLEBOPTERIS = REGISTER.register("configured_phlebopteris", () -> new ConfiguredFeature(Feature.RANDOM_PATCH, grassPatch(BlockStateProvider.simple(PFBlocks.PHLEBOPTERIS.get()), 32)));

	public static final RegistryObject<ConfiguredFeature<?, ?>> CRASSOSTREA_OYSTERS = REGISTER.register("configured_crassostrea_oyster", () -> new ConfiguredFeature(PFFeatures.CRASSOSTREA_OYSTERS.get(), new CrassostreaOystersConfig(24)));
	public static final RegistryObject<ConfiguredFeature<?, ?>> ALGAE = REGISTER.register("configured_algae", () -> new ConfiguredFeature(PFFeatures.ALGAE.get(), new CrassostreaOystersConfig(24)));
	public static final RegistryObject<ConfiguredFeature<?, ?>> COBBANIA = REGISTER.register("configured_cobbania", () -> new ConfiguredFeature(Feature.RANDOM_PATCH, grassPatch(BlockStateProvider.simple(PFBlocks.COBBANIA.get()), 32)));

	public static final RegistryObject<ConfiguredFeature<?, ?>> SANDSTONE_ROCK = REGISTER.register("configured_sandstone_rock", () -> new ConfiguredFeature(Feature.FOREST_ROCK, new BlockStateConfiguration(Blocks.SANDSTONE.defaultBlockState())));
	public static final RegistryObject<ConfiguredFeature<?, ?>> BIG_SANDSTONE_ROCK = REGISTER.register("configured_large_sandstone_rock", () -> new ConfiguredFeature(PFFeatures.BIG_BLOCK_BLOB.get(), new BlockStateConfiguration(Blocks.SANDSTONE.defaultBlockState())));
	public static final RegistryObject<ConfiguredFeature<?, ?>> RED_SANDSTONE_ROCK = REGISTER.register("configured_red_sandstone_rock", () -> new ConfiguredFeature(Feature.FOREST_ROCK, new BlockStateConfiguration(Blocks.RED_SANDSTONE.defaultBlockState())));
	public static final RegistryObject<ConfiguredFeature<?, ?>> BIG_RED_SANDSTONE_ROCK = REGISTER.register("configured_large_red_sandstone_rock", () -> new ConfiguredFeature(PFFeatures.BIG_BLOCK_BLOB.get(), new BlockStateConfiguration(Blocks.RED_SANDSTONE.defaultBlockState())));

	public static final RegistryObject<ConfiguredFeature<?, ?>> PTILOPHYLLUM_TREE = REGISTER.register("configured_ptilophyllum_tree", () -> new ConfiguredFeature(PFFeatures.PTILOPHYLLUM_TREE.get(), new NoneFeatureConfiguration()));

	public static final RegistryObject<ConfiguredFeature<?, ?>> PETRIFIED_TREE = REGISTER.register("configured_petrified_tree", () -> new ConfiguredFeature(PFFeatures.PETRIFIED_TREE.get(), new JohnstoniaConfig(10)));
	public static final RegistryObject<ConfiguredFeature<?, ?>> JOHNSTONIA = REGISTER.register("congigured_johnstonia", () -> new ConfiguredFeature(PFFeatures.JOHNSTONIA.get(), new JohnstoniaConfig(3)));
	public static final RegistryObject<ConfiguredFeature<?, ?>> DICROIDIUM = REGISTER.register("congigured_dicroidium", () -> new ConfiguredFeature(PFFeatures.DICROIDIUM.get(), new JohnstoniaConfig(6)));

	public static final RegistryObject<ConfiguredFeature<?, ?>> NEOCALAMITES = REGISTER.register("congigured_neocalamites", () -> new ConfiguredFeature(PFFeatures.NEOCALAMITES.get(), new JohnstoniaConfig(12)));

	public static final RegistryObject<ConfiguredFeature<?, ?>> CLAY_DISK = REGISTER.register("congigured_clay_disk", () -> new ConfiguredFeature(PFFeatures.LAND_DISK.get(), new DiskConfiguration(Blocks.CLAY.defaultBlockState(), UniformInt.of(1, 3), 1, ImmutableList.of(PFBlocks.SILT.get().defaultBlockState(), PFBlocks.HARDENED_SILT.get().defaultBlockState(), Blocks.SAND.defaultBlockState()))));
	public static final RegistryObject<ConfiguredFeature<?, ?>> GRAVEL_DISK = REGISTER.register("congigured_gravel_disk", () -> new ConfiguredFeature(PFFeatures.LAND_DISK.get(), new DiskConfiguration(Blocks.GRAVEL.defaultBlockState(), UniformInt.of(1, 3), 1, ImmutableList.of(PFBlocks.SILT.get().defaultBlockState(), PFBlocks.HARDENED_SILT.get().defaultBlockState(), Blocks.SAND.defaultBlockState()))));

	public static final RegistryObject<ConfiguredFeature<?, ?>> DISK_SILT = REGISTER.register("disk_silt",() -> new ConfiguredFeature(Feature.DISK, new DiskConfiguration(PFBlocks.SILT.get().defaultBlockState(), UniformInt.of(8, 8), 4, List.of(Blocks.DIRT.defaultBlockState(), PFBlocks.LOAM.get().defaultBlockState(), PFBlocks.PACKED_LOAM.get().defaultBlockState(), PFBlocks.MOSSY_DIRT.get().defaultBlockState(), PFBlocks.HARDENED_SILT.get().defaultBlockState(), Blocks.PODZOL.defaultBlockState(), Blocks.SAND.defaultBlockState()))));


	public static final RegistryObject<ConfiguredFeature<?, ?>> CHINLE_SWAMP_TREES = register("chinle_swamp_trees", () -> new ConfiguredFeature<>(Feature.RANDOM_SELECTOR, new RandomFeatureConfiguration(List.of(new WeightedPlacedFeature(PFPlacedFeatures.WOODWORTHIA_TREE_1_CHECKED.getHolder().get(), 0.1F), new WeightedPlacedFeature(PFPlacedFeatures.WOODWORTHIA_TREE_2_CHECKED.getHolder().get(), 0.1F), new WeightedPlacedFeature(PFPlacedFeatures.WOODWORTHIA_TREE_3_CHECKED.getHolder().get(), 0.1F), new WeightedPlacedFeature(PFPlacedFeatures.SMALL_AGATHOXYLON_TREE_1_CHECKED.getHolder().get(), 0.3F), new WeightedPlacedFeature(PFPlacedFeatures.SMALL_AGATHOXYLON_TREE_2_CHECKED.getHolder().get(), 0.3F)), PFPlacedFeatures.WOODWORTHIA_TREE_4_CHECKED.getHolder().get())));
	public static final RegistryObject<ConfiguredFeature<?, ?>> SCHILDERIA_TREES = register("schilderia_trees", () -> new ConfiguredFeature<>(Feature.RANDOM_SELECTOR, new RandomFeatureConfiguration(List.of(new WeightedPlacedFeature(PFPlacedFeatures.SCHILDERIA_TREE_1_CHECKED.getHolder().get(), 0.3F), new WeightedPlacedFeature(PFPlacedFeatures.SCHILDERIA_TREE_2_CHECKED.getHolder().get(), 0.3F), new WeightedPlacedFeature(PFPlacedFeatures.SCHILDERIA_TREE_3_CHECKED.getHolder().get(), 0.3F)), PFPlacedFeatures.SCHILDERIA_TREE_4_CHECKED.getHolder().get())));
	public static final RegistryObject<ConfiguredFeature<?, ?>> CHINLE_FLATS_TREES = register("chinle_flats_trees", () -> new ConfiguredFeature<>(Feature.RANDOM_SELECTOR, new RandomFeatureConfiguration(List.of(new WeightedPlacedFeature(PFPlacedFeatures.SMALL_AGATHOXYLON_TREE_1_CHECKED.getHolder().get(), 0.125F), new WeightedPlacedFeature(PFPlacedFeatures.SMALL_AGATHOXYLON_TREE_2_CHECKED.getHolder().get(), 0.125F), new WeightedPlacedFeature(PFPlacedFeatures.SCHILDERIA_TREE_1_CHECKED.getHolder().get(), 0.125F), new WeightedPlacedFeature(PFPlacedFeatures.SCHILDERIA_TREE_2_CHECKED.getHolder().get(), 0.125F), new WeightedPlacedFeature(PFPlacedFeatures.WOODWORTHIA_TREE_1_CHECKED.getHolder().get(), 0.125F), new WeightedPlacedFeature(PFPlacedFeatures.WOODWORTHIA_TREE_2_CHECKED.getHolder().get(), 0.125F), new WeightedPlacedFeature(PFPlacedFeatures.WOODWORTHIA_TREE_3_CHECKED.getHolder().get(), 0.125F)), PFPlacedFeatures.WOODWORTHIA_TREE_4_CHECKED.getHolder().get())));
	public static final RegistryObject<ConfiguredFeature<?, ?>> AGATHOXYLON_TREES = register("agathoxylon_trees", () -> new ConfiguredFeature<>(Feature.RANDOM_SELECTOR, new RandomFeatureConfiguration(List.of(new WeightedPlacedFeature(PFPlacedFeatures.LARGE_AGATHOXYLON_TREE_1_CHECKED.getHolder().get(), 0.25F), new WeightedPlacedFeature(PFPlacedFeatures.LARGE_AGATHOXYLON_TREE_2_CHECKED.getHolder().get(), 0.25F), new WeightedPlacedFeature(PFPlacedFeatures.LARGE_AGATHOXYLON_TREE_3_CHECKED.getHolder().get(), 0.25F), new WeightedPlacedFeature(PFPlacedFeatures.MEDIUM_AGATHOXYLON_TREE_1_CHECKED.getHolder().get(), 0.125F)), PFPlacedFeatures.MEDIUM_AGATHOXYLON_TREE_2_CHECKED.getHolder().get())));
	public static final RegistryObject<ConfiguredFeature<?, ?>> CHINLE_WOODED_MOUNTAINS_TREES = register("chinle_wooded_mountains_trees", () -> new ConfiguredFeature<>(Feature.RANDOM_SELECTOR, new RandomFeatureConfiguration(List.of(new WeightedPlacedFeature(PFPlacedFeatures.WOODWORTHIA_TREE_1_CHECKED.getHolder().get(), 0.2F), new WeightedPlacedFeature(PFPlacedFeatures.WOODWORTHIA_TREE_2_CHECKED.getHolder().get(), 0.2F), new WeightedPlacedFeature(PFPlacedFeatures.WOODWORTHIA_TREE_3_CHECKED.getHolder().get(), 0.2F), new WeightedPlacedFeature(PFPlacedFeatures.SCHILDERIA_TREE_1_CHECKED.getHolder().get(), 0.1F), new WeightedPlacedFeature(PFPlacedFeatures.SCHILDERIA_TREE_2_CHECKED.getHolder().get(), 0.1F)), PFPlacedFeatures.WOODWORTHIA_TREE_4_CHECKED.getHolder().get())));
	public static final RegistryObject<ConfiguredFeature<?, ?>> ISCHIGUALASTO_TREES = register("ischigualasto_trees", () -> new ConfiguredFeature<>(Feature.RANDOM_SELECTOR, new RandomFeatureConfiguration(List.of(new WeightedPlacedFeature(PFPlacedFeatures.HEIDIPHYLLUM_TREE_1_CHECKED.getHolder().get(), 0.075F), new WeightedPlacedFeature(PFPlacedFeatures.HEIDIPHYLLUM_TREE_2_CHECKED.getHolder().get(), 0.075F), new WeightedPlacedFeature(PFPlacedFeatures.HEIDIPHYLLUM_TREE_3_CHECKED.getHolder().get(), 0.075F), new WeightedPlacedFeature(PFPlacedFeatures.HEIDIPHYLLUM_TREE_4_CHECKED.getHolder().get(), 0.075F), new WeightedPlacedFeature(PFPlacedFeatures.HEIDIPHYLLUM_TREE_5_CHECKED.getHolder().get(), 0.075F), new WeightedPlacedFeature(PFPlacedFeatures.SMALL_ARAUCARIA_TREE_1_CHECKED.getHolder().get(), 0.075F), new WeightedPlacedFeature(PFPlacedFeatures.SMALL_ARAUCARIA_TREE_2_CHECKED.getHolder().get(), 0.075F), new WeightedPlacedFeature(PFPlacedFeatures.SMALL_ARAUCARIA_TREE_3_CHECKED.getHolder().get(), 0.075F), new WeightedPlacedFeature(PFPlacedFeatures.SMALL_ARAUCARIA_TREE_4_CHECKED.getHolder().get(), 0.075F), new WeightedPlacedFeature(PFPlacedFeatures.SMALL_AGATHOXYLON_TREE_1_CHECKED.getHolder().get(), 0.03F), new WeightedPlacedFeature(PFPlacedFeatures.SMALL_AGATHOXYLON_TREE_2_CHECKED.getHolder().get(), 0.03F), new WeightedPlacedFeature(PFPlacedFeatures.MEDIUM_AGATHOXYLON_TREE_1_CHECKED.getHolder().get(), 0.004375F), new WeightedPlacedFeature(PFPlacedFeatures.MEDIUM_AGATHOXYLON_TREE_2_CHECKED.getHolder().get(), 0.004375F), new WeightedPlacedFeature(PFPlacedFeatures.PROTOJUNIPEROXYLON_TREE_1_CHECKED.getHolder().get(), 0.025F)), PFPlacedFeatures.PROTOJUNIPEROXYLON_TREE_2_CHECKED.getHolder().get())));

	public static <FC extends FeatureConfiguration, F extends Feature<FC>> RegistryObject<ConfiguredFeature<?, ?>> register(String name, Supplier<ConfiguredFeature<?, ?>> configuredFeature) {
		return REGISTER.register(name, configuredFeature);
	}

	private static RandomPatchConfiguration grassPatch(BlockStateProvider p_195203_, int p_195204_) {
		return FeatureUtils.simpleRandomPatchConfiguration(p_195204_, PlacementUtils.onlyWhenEmpty(Feature.SIMPLE_BLOCK, new SimpleBlockConfiguration(p_195203_)));
	}

}